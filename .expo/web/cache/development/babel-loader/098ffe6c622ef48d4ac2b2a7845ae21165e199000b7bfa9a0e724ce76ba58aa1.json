{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useWorker } from '@koale/useworker';\nimport * as React from 'react';\nimport { captureImageData } from \"./WebCameraUtils\";\nvar qrWorkerMethod = function qrWorkerMethod(_ref) {\n  var _parsed;\n  var data = _ref.data,\n    width = _ref.width,\n    height = _ref.height;\n  var decoded = self.jsQR(data, width, height, {\n    inversionAttempts: 'dontInvert'\n  });\n  var parsed;\n  try {\n    parsed = JSON.parse(decoded);\n  } catch (err) {\n    parsed = decoded;\n  }\n  if ((_parsed = parsed) != null && _parsed.data) {\n    var nativeEvent = {\n      type: 'qr',\n      data: parsed.data\n    };\n    if (parsed.location) {\n      nativeEvent.cornerPoints = [parsed.location.topLeftCorner, parsed.location.bottomLeftCorner, parsed.location.topRightCorner, parsed.location.bottomRightCorner];\n    }\n    return nativeEvent;\n  }\n  return parsed;\n};\nfunction useRemoteJsQR() {\n  return useWorker(qrWorkerMethod, {\n    remoteDependencies: ['https://cdn.jsdelivr.net/npm/jsqr@1.2.0/dist/jsQR.min.js'],\n    timeout: 5000\n  });\n}\nexport function useWebQRScanner(video, _ref2) {\n  var isEnabled = _ref2.isEnabled,\n    captureOptions = _ref2.captureOptions,\n    interval = _ref2.interval,\n    onScanned = _ref2.onScanned,\n    onError = _ref2.onError;\n  var isRunning = React.useRef(false);\n  var timeout = React.useRef(undefined);\n  var _useRemoteJsQR = useRemoteJsQR(),\n    _useRemoteJsQR2 = _slicedToArray(_useRemoteJsQR, 2),\n    decode = _useRemoteJsQR2[0],\n    clearWorker = _useRemoteJsQR2[1];\n  function scanAsync() {\n    return _scanAsync.apply(this, arguments);\n  }\n  function _scanAsync() {\n    _scanAsync = _asyncToGenerator(function* () {\n      if (!isRunning.current || !onScanned) {\n        stop();\n        return;\n      }\n      try {\n        var data = captureImageData(video.current, captureOptions);\n        if (data) {\n          var nativeEvent = yield decode(data);\n          if (nativeEvent != null && nativeEvent.data) {\n            onScanned({\n              nativeEvent: nativeEvent\n            });\n          }\n        }\n      } catch (error) {\n        if (onError) {\n          onError({\n            nativeEvent: error\n          });\n        }\n      } finally {\n        if (interval === 0) {\n          stop();\n          return;\n        }\n        var intervalToUse = !interval || interval < 0 ? 16 : interval;\n        timeout.current = setTimeout(function () {\n          scanAsync();\n        }, intervalToUse);\n      }\n    });\n    return _scanAsync.apply(this, arguments);\n  }\n  function stop() {\n    isRunning.current = false;\n    clearTimeout(timeout.current);\n  }\n  React.useEffect(function () {\n    if (isEnabled) {\n      isRunning.current = true;\n      scanAsync();\n    } else {\n      stop();\n    }\n  }, [isEnabled]);\n  React.useEffect(function () {\n    return function () {\n      stop();\n      clearWorker.kill();\n    };\n  }, []);\n}","map":{"version":3,"names":["useWorker","React","captureImageData","qrWorkerMethod","_ref","_parsed","data","width","height","decoded","self","jsQR","inversionAttempts","parsed","JSON","parse","err","nativeEvent","type","location","cornerPoints","topLeftCorner","bottomLeftCorner","topRightCorner","bottomRightCorner","useRemoteJsQR","remoteDependencies","timeout","useWebQRScanner","video","_ref2","isEnabled","captureOptions","interval","onScanned","onError","isRunning","useRef","undefined","_useRemoteJsQR","_useRemoteJsQR2","_slicedToArray","decode","clearWorker","scanAsync","_scanAsync","apply","arguments","_asyncToGenerator","current","stop","error","intervalToUse","setTimeout","clearTimeout","useEffect","kill"],"sources":["/Users/apple/Desktop/NYUAugmentedLibrary/node_modules/expo-camera/src/useWebQRScanner.ts"],"sourcesContent":["import { useWorker } from '@koale/useworker';\nimport * as React from 'react';\n\nimport { CameraPictureOptions } from './Camera';\nimport { BarCodeScanningResult, MountErrorListener } from './Camera.types';\nimport { captureImageData } from './WebCameraUtils';\n\nconst qrWorkerMethod = ({ data, width, height }: ImageData): any => {\n  // eslint-disable-next-line no-undef\n  const decoded = (self as any).jsQR(data, width, height, {\n    inversionAttempts: 'dontInvert',\n  });\n\n  let parsed;\n  try {\n    parsed = JSON.parse(decoded);\n  } catch (err) {\n    parsed = decoded;\n  }\n\n  if (parsed?.data) {\n    const nativeEvent: BarCodeScanningResult = {\n      type: 'qr',\n      data: parsed.data,\n    };\n    if (parsed.location) {\n      nativeEvent.cornerPoints = [\n        parsed.location.topLeftCorner,\n        parsed.location.bottomLeftCorner,\n        parsed.location.topRightCorner,\n        parsed.location.bottomRightCorner,\n      ];\n    }\n    return nativeEvent;\n  }\n  return parsed;\n};\n\nfunction useRemoteJsQR() {\n  return useWorker(qrWorkerMethod, {\n    remoteDependencies: ['https://cdn.jsdelivr.net/npm/jsqr@1.2.0/dist/jsQR.min.js'],\n    timeout: 5000,\n  });\n}\n\nexport function useWebQRScanner(\n  video: React.MutableRefObject<HTMLVideoElement | null>,\n  {\n    isEnabled,\n    captureOptions,\n    interval,\n    onScanned,\n    onError,\n  }: {\n    isEnabled: boolean;\n    captureOptions: Pick<CameraPictureOptions, 'scale' | 'isImageMirror'>;\n    interval?: number;\n    onScanned?: (scanningResult: { nativeEvent: BarCodeScanningResult }) => void;\n    onError?: MountErrorListener;\n  }\n) {\n  const isRunning = React.useRef<boolean>(false);\n  const timeout = React.useRef<number | undefined>(undefined);\n\n  const [decode, clearWorker] = useRemoteJsQR();\n\n  async function scanAsync() {\n    // If interval is 0 then only scan once.\n    if (!isRunning.current || !onScanned) {\n      stop();\n      return;\n    }\n    try {\n      const data = captureImageData(video.current, captureOptions);\n\n      if (data) {\n        const nativeEvent: BarCodeScanningResult | any = await decode(data);\n        if (nativeEvent?.data) {\n          onScanned({\n            nativeEvent,\n          });\n        }\n      }\n    } catch (error) {\n      if (onError) {\n        onError({ nativeEvent: error });\n      }\n    } finally {\n      // If interval is 0 then only scan once.\n      if (interval === 0) {\n        stop();\n        return;\n      }\n      const intervalToUse = !interval || interval < 0 ? 16 : interval;\n      // @ts-ignore: Type 'Timeout' is not assignable to type 'number'\n      timeout.current = setTimeout(() => {\n        scanAsync();\n      }, intervalToUse);\n    }\n  }\n\n  function stop() {\n    isRunning.current = false;\n    clearTimeout(timeout.current);\n  }\n\n  React.useEffect(() => {\n    if (isEnabled) {\n      isRunning.current = true;\n      scanAsync();\n    } else {\n      stop();\n    }\n  }, [isEnabled]);\n\n  React.useEffect(() => {\n    return () => {\n      stop();\n      clearWorker.kill();\n    };\n  }, []);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}