{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nimport ScreenTemplate from \"../screenTemplate\";\nimport RoomObject from \"../components/RoomObject\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar month = {\n  \"2022-04-04\": {\n    room1: {\n      name: 'RHS349',\n      availableSlots: 2\n    },\n    room2: {\n      name: 'RHS350',\n      availableSlots: 0\n    },\n    room3: {\n      name: 'RHS349',\n      availableSlots: 1\n    },\n    room4: {\n      name: 'RHS349',\n      availableSlots: 20\n    }\n  },\n  \"2022-04-05\": {\n    room1: {\n      name: 'RHS349',\n      availableSlots: 20\n    },\n    room2: {\n      name: 'RHS350',\n      availableSlots: 20\n    },\n    room3: {\n      name: 'RHS349',\n      availableSlots: 20\n    },\n    room4: {\n      name: 'RHS349',\n      availableSlots: 20\n    }\n  },\n  \"2022-04-06\": {\n    room1: {\n      name: 'RHS349',\n      availableSlots: 0\n    },\n    room2: {\n      name: 'RHS350',\n      availableSlots: 0\n    },\n    room3: {\n      name: 'RHS349',\n      availableSlots: 0\n    },\n    room4: {\n      name: 'RHS349',\n      availableSlots: 0\n    }\n  }\n};\nfunction getDayCount(month) {\n  for (var day of Object.entries(month)) {\n    month[day[0]] = Object.values(day[1]).reduce(function (prev, curr) {\n      return prev + curr.availableSlots;\n    }, 0);\n  }\n  for (var date of Object.keys(month)) {\n    console.log(month[date]);\n    if (month[date] === 0) {\n      month[date] = {\n        startingDay: true,\n        color: '#eb344c',\n        endingDay: true,\n        opacity: 0\n      };\n    } else if (month[date] < TOTAL * .2) {\n      month[date] = {\n        startingDay: true,\n        color: '#e67f2c',\n        endingDay: true\n      };\n    } else if (month[date] >= TOTAL * .2 && month[date] < TOTAL * .8) {\n      month[date] = {\n        startingDay: true,\n        color: '#f7e731',\n        endingDay: true\n      };\n    } else {\n      month[date] = {\n        startingDay: true,\n        color: '#71eb34',\n        endingDay: true,\n        opacity: 0\n      };\n    }\n  }\n  return month;\n}\nvar TOTAL = 80;\nvar markedDatesVar = {\n  \"2022-04-06\": {\n    color: \"red\",\n    endingDay: true,\n    startingDay: true\n  }\n};\nexport default function ReserveScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  return _jsx(ScreenTemplate, {\n    children: _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        style: {\n          height: 50,\n          backgroundColor: 'white',\n          justifyContent: 'center',\n          borderBottomWidth: 2,\n          borderColor: 'black',\n          borderStyle: 'dashed'\n        },\n        children: _jsx(Text, {\n          children: \"Pick date\"\n        })\n      }), _jsx(Calendar, {\n        markingType: 'period',\n        markedDates: data,\n        onDayPress: function onDayPress(day) {\n          navigation.navigate(\"PickTime\", {\n            day: day\n          });\n        }\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          setData(getDayCount(month));\n          console.log(\"hi\");\n        },\n        title: \"Refresh days\",\n        color: \"#841584\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","View","ScrollView","Text","Button","Calendar","CalendarList","Agenda","ScreenTemplate","RoomObject","jsx","_jsx","jsxs","_jsxs","month","room1","name","availableSlots","room2","room3","room4","getDayCount","day","Object","entries","values","reduce","prev","curr","date","keys","console","log","startingDay","color","endingDay","opacity","TOTAL","markedDatesVar","ReserveScreen","_ref","navigation","_useState","_useState2","_slicedToArray","data","setData","children","style","height","backgroundColor","justifyContent","borderBottomWidth","borderColor","borderStyle","markingType","markedDates","onDayPress","navigate","onPress","title"],"sources":["/Users/apple/Desktop/NYUAugmentedLibrary/Screens/Reserve Screen/ReserveScreen.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {\n  View,\n  ScrollView,\n  Text,\n    Button,\n} from 'react-native';\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars'\nimport ScreenTemplate from \"../screenTemplate\";\nimport RoomObject from \"../components/RoomObject\";\n\n\nconst month = { // test month\n    \"2022-04-04\": {\n        room1: {name: 'RHS349', availableSlots: 2},\n        room2: {name: 'RHS350', availableSlots: 0},\n        room3: {name: 'RHS349', availableSlots: 1},\n        room4: {name: 'RHS349', availableSlots: 20},\n    },\n    \"2022-04-05\" : {\n        room1: {name: 'RHS349', availableSlots: 20},\n        room2: {name: 'RHS350', availableSlots: 20},\n        room3: {name: 'RHS349', availableSlots: 20},\n        room4: {name: 'RHS349', availableSlots: 20},\n    },\n    \"2022-04-06\" : {\n        room1: {name: 'RHS349', availableSlots: 0},\n        room2: {name: 'RHS350', availableSlots: 0},\n        room3: {name: 'RHS349', availableSlots: 0},\n        room4: {name: 'RHS349', availableSlots: 0},\n    },\n}\n\n// Returns an object that contains the\n// amount of days available per room\nfunction getDayCount(month) {\n\n    // Formats all days so its { \"YYYY-MM-DD\" : Num of available rooms}\n    for (let day of Object.entries(month)) {\n        month[day[0]] = Object.values(day[1]).reduce(\n            (prev, curr) => prev + curr.availableSlots, 0\n        )\n    }\n\n    // Labels all days corresponding to fullness.\n    for (let date of Object.keys(month)) {\n        console.log(month[date])\n        if (month[date] === 0) {\n            month[date] = {startingDay: true, color: '#eb344c', endingDay: true, opacity: 0}\n        }\n        else if (month[date] < TOTAL * .2) {\n            month[date] = {startingDay: true, color: '#e67f2c', endingDay: true}\n        }\n        else if (month[date] >= TOTAL * .2 && month[date] < TOTAL * .8) {\n            month[date] = {startingDay: true, color: '#f7e731', endingDay: true}\n        }\n        else {\n            month[date] = {startingDay: true, color: '#71eb34', endingDay: true, opacity: 0}\n        }\n    }\n    return month\n}\nconst TOTAL = 80 // Total amount of rooms per day\n\nlet markedDatesVar = {\n    \"2022-04-06\": {\n        color: \"red\",\n        endingDay: true,\n        startingDay: true,\n    },\n}\n\nexport default function ReserveScreen({navigation}) {\n    const [data, setData] = useState({})\n  return(\n    <ScreenTemplate>\n      <ScrollView>\n        <View\n          style={{\n            height: 50,\n            backgroundColor:'white',\n            justifyContent:'center',\n            borderBottomWidth:2,\n            borderColor:'black',\n            borderStyle:'dashed'\n          }}>\n          <Text>Pick date</Text>\n        </View>\n          <Calendar markingType={'period'}\n                    markedDates={data}\n                    onDayPress={day => {\n                        navigation.navigate(\"PickTime\", {\n                            day: day\n                        })\n                    }}\n          />\n          <Button onPress={ () => {\n              setData(getDayCount(month))\n              console.log(\"hi\")\n          }} title={\"Refresh days\"} color={\"#841584\"}/>\n        \n      </ScrollView>\n    </ScreenTemplate>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}